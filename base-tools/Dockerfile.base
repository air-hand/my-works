# syntax=docker/dockerfile:1
FROM debian:bullseye

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ENV \
    DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    TZ=Asia/Tokyo

ARG USERNAME
ARG UID
ARG GID
ARG HOMEDIR
ARG DOCKER_GID

# https://www.debian.org/mirror/list-full.en.html#JP 
RUN sed -ie 's!http://deb.debian.org/debian !http://ftp.kddilabs.jp/pub/debian !' /etc/apt/sources.list

# https://docs.docker.com/engine/install/debian/#set-up-the-repository
# Install docker-cli
RUN apt update \
    && apt install -y ca-certificates curl gnupg \
    && install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && chmod a+r /etc/apt/keyrings/docker.gpg \
    && echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    ;

RUN apt update && apt install -y \
    apt-file \
    make bash-completion tree jq vim git tig build-essential tar gzip unzip sudo tzdata man-db \
    rsync openssh-client \
    automake autoconf libtool \
    locales-all \
    procps \
    graphviz \
    python3-minimal \
    python3-pip \
    docker-ce-cli docker-buildx-plugin docker-compose-plugin \
    && apt-file update \
    ;

RUN groupadd --gid $GID $USERNAME || true \
    && useradd --uid $UID -d ${HOMEDIR} -m --gid $GID $USERNAME || true\
    && echo "${USERNAME} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${USERNAME} \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && mkdir -p ${HOMEDIR}/.config \
    && chown -R $USERNAME:$USERNAME ${HOMEDIR} \
    ;

# for control docker with DooD.
# add group docker if not exists, and add user to group docker.
RUN groupadd --gid $DOCKER_GID docker-user || true \
    && usermod -aG $(getent group $DOCKER_GID | cut -d: -f1) $USERNAME \
    ;

RUN python3 -m pip install -U pre-commit

# https://github.com/inotify-tools/inotify-tools
ENV INOTIFY_TOOLS_VER=3.22.6.0
RUN mkdir -p /usr/local/src && cd /usr/local/src \
    && curl -o inotify-tools.tar.gz -sL "https://github.com/inotify-tools/inotify-tools/archive/refs/tags/${INOTIFY_TOOLS_VER}.tar.gz" \
    && tar -zxvf inotify-tools.tar.gz \
    && cd inotify-tools-${INOTIFY_TOOLS_VER} \
    && ./autogen.sh && ./configure --prefix=/usr && make && make install \
    ;

# https://code.visualstudio.com/remote/advancedcontainers/persist-bash-history
ENV PROMPT_COMMAND='history -a' \
    HISTFILE=/commandhistory/.bash_history
RUN mkdir -p /commandhistory && chown -R $USERNAME:$USERNAME /commandhistory

USER $USERNAME
ENV HOME=$HOMEDIR
